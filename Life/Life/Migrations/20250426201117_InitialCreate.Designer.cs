// <auto-generated />
using System;
using Life.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Life.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250426201117_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Life.Shared.Entities.Exercise", b =>
                {
                    b.Property<int>("ExerciseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExerciseId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DifficultyType")
                        .HasColumnType("int");

                    b.Property<int>("EquipmentType")
                        .HasColumnType("int");

                    b.Property<bool>("IsRiskOfInjury")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetMuscleMain")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetMuscleSecondary")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExerciseId");

                    b.ToTable("Exercises");

                    b.HasData(
                        new
                        {
                            ExerciseId = 1,
                            DifficultyType = 2,
                            EquipmentType = 0,
                            IsRiskOfInjury = true,
                            Name = "Muscle Up",
                            TargetMuscleMain = "Back",
                            TargetMuscleSecondary = "Arm, Chest"
                        },
                        new
                        {
                            ExerciseId = 2,
                            DifficultyType = 1,
                            EquipmentType = 0,
                            IsRiskOfInjury = false,
                            Name = "Squat",
                            TargetMuscleMain = "Leg"
                        },
                        new
                        {
                            ExerciseId = 3,
                            DifficultyType = 1,
                            EquipmentType = 2,
                            IsRiskOfInjury = false,
                            Name = "Bench press",
                            TargetMuscleMain = "Chest",
                            TargetMuscleSecondary = "Arm"
                        });
                });

            modelBuilder.Entity("Life.Shared.Entities.Food", b =>
                {
                    b.Property<int>("FoodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FoodId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("FoodId");

                    b.ToTable("Foods");

                    b.HasData(
                        new
                        {
                            FoodId = 1,
                            Name = "Körte",
                            Quantity = 1
                        },
                        new
                        {
                            FoodId = 2,
                            Name = "Alma",
                            Quantity = 2
                        });
                });

            modelBuilder.Entity("Life.Shared.Entities.FoodNutrient", b =>
                {
                    b.Property<int>("FoodId")
                        .HasColumnType("int");

                    b.Property<int>("NutrientId")
                        .HasColumnType("int");

                    b.Property<float>("Quantity")
                        .HasColumnType("real");

                    b.HasKey("FoodId", "NutrientId");

                    b.HasIndex("NutrientId");

                    b.ToTable("FoodNutrients");

                    b.HasData(
                        new
                        {
                            FoodId = 1,
                            NutrientId = 1,
                            Quantity = 3f
                        },
                        new
                        {
                            FoodId = 1,
                            NutrientId = 2,
                            Quantity = 2f
                        },
                        new
                        {
                            FoodId = 2,
                            NutrientId = 3,
                            Quantity = 10f
                        });
                });

            modelBuilder.Entity("Life.Shared.Entities.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocationId"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LocationId");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            LocationId = 1,
                            City = "Debrecen",
                            Country = "Hungary"
                        },
                        new
                        {
                            LocationId = 2,
                            City = "Seoul",
                            Country = "Korea"
                        });
                });

            modelBuilder.Entity("Life.Shared.Entities.Meal", b =>
                {
                    b.Property<int>("MealId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MealId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FoodId")
                        .HasColumnType("int");

                    b.Property<int>("MealType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("MealId");

                    b.HasIndex("FoodId");

                    b.ToTable("Meals");

                    b.HasData(
                        new
                        {
                            MealId = 1,
                            FoodId = 1,
                            MealType = 3,
                            Name = "Power Up",
                            Quantity = 1
                        },
                        new
                        {
                            MealId = 2,
                            FoodId = 2,
                            MealType = 0,
                            Name = "ThisWay",
                            Quantity = 4
                        });
                });

            modelBuilder.Entity("Life.Shared.Entities.MealLog", b =>
                {
                    b.Property<int>("MealLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MealLogId"));

                    b.Property<DateTime>("ConsumedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("MealId")
                        .HasColumnType("int");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.HasKey("MealLogId");

                    b.HasIndex("MealId");

                    b.HasIndex("MemberId");

                    b.ToTable("MealLogs");
                });

            modelBuilder.Entity("Life.Shared.Entities.Member", b =>
                {
                    b.Property<int>("MemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MemberId"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LicenseNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MealId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PersonalId")
                        .HasColumnType("int");

                    b.Property<int>("RoleType")
                        .HasColumnType("int");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int");

                    b.Property<int?>("WorkoutId")
                        .HasColumnType("int");

                    b.HasKey("MemberId");

                    b.HasIndex("MealId");

                    b.HasIndex("PersonalId");

                    b.HasIndex("TeamId");

                    b.HasIndex("WorkoutId");

                    b.ToTable("Members");

                    b.HasData(
                        new
                        {
                            MemberId = 1,
                            IsActive = false,
                            LicenseNumber = "DE001",
                            MealId = 1,
                            Name = "No Way",
                            PersonalId = 1,
                            RoleType = 0,
                            TeamId = 1,
                            WorkoutId = 1
                        },
                        new
                        {
                            MemberId = 2,
                            IsActive = false,
                            LicenseNumber = "DE002",
                            MealId = 2,
                            Name = "This Way",
                            PersonalId = 2,
                            RoleType = 0,
                            TeamId = 2,
                            WorkoutId = 2
                        });
                });

            modelBuilder.Entity("Life.Shared.Entities.Nutrient", b =>
                {
                    b.Property<int>("NutrientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NutrientId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NutrientType")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NutrientId");

                    b.ToTable("Nutrients");

                    b.HasData(
                        new
                        {
                            NutrientId = 1,
                            Name = "Protein",
                            NutrientType = 2,
                            Unit = "mg"
                        },
                        new
                        {
                            NutrientId = 2,
                            Name = "Vitamin C",
                            NutrientType = 0,
                            Unit = "mg"
                        },
                        new
                        {
                            NutrientId = 3,
                            Name = "TesztADAT",
                            NutrientType = 1,
                            Unit = "l"
                        });
                });

            modelBuilder.Entity("Life.Shared.Entities.Personal", b =>
                {
                    b.Property<int>("PersonalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonalId"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Height")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Weight")
                        .HasColumnType("int");

                    b.HasKey("PersonalId");

                    b.ToTable("Personals");

                    b.HasData(
                        new
                        {
                            PersonalId = 1,
                            BirthDate = new DateTime(2001, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Wayout2001@test.com",
                            FirstName = "No",
                            LastName = "Way"
                        },
                        new
                        {
                            PersonalId = 2,
                            BirthDate = new DateTime(2000, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Wayout2000@test.com",
                            FirstName = "This",
                            LastName = "Way"
                        });
                });

            modelBuilder.Entity("Life.Shared.Entities.ProgressMeasurement", b =>
                {
                    b.Property<int>("ProgressMeasurementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProgressMeasurementId"));

                    b.Property<float?>("BodyFatPercent")
                        .HasColumnType("real");

                    b.Property<DateTime>("MeasuredAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<float?>("MuscleMassKg")
                        .HasColumnType("real");

                    b.Property<float?>("WaistCircumferenceCm")
                        .HasColumnType("real");

                    b.Property<float?>("WeightKg")
                        .HasColumnType("real");

                    b.HasKey("ProgressMeasurementId");

                    b.HasIndex("MemberId");

                    b.ToTable("ProgressMeasurements");
                });

            modelBuilder.Entity("Life.Shared.Entities.Team", b =>
                {
                    b.Property<int>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeamId"));

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TeamId");

                    b.HasIndex("LocationId");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            TeamId = 1,
                            LocationId = 1,
                            Name = "Way Out Now - WON"
                        },
                        new
                        {
                            TeamId = 2,
                            LocationId = 2,
                            Name = "Way Out Now Academy - A-WON"
                        });
                });

            modelBuilder.Entity("Life.Shared.Entities.Workout", b =>
                {
                    b.Property<int>("WorkoutId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkoutId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WorkoutType")
                        .HasColumnType("int");

                    b.HasKey("WorkoutId");

                    b.ToTable("Workouts");

                    b.HasData(
                        new
                        {
                            WorkoutId = 1,
                            Name = "SpecialOne",
                            WorkoutType = 1
                        },
                        new
                        {
                            WorkoutId = 2,
                            Name = "SpecialOne",
                            WorkoutType = 2
                        });
                });

            modelBuilder.Entity("Life.Shared.Entities.WorkoutExercise", b =>
                {
                    b.Property<int>("WorkoutId")
                        .HasColumnType("int");

                    b.Property<int>("ExerciseId")
                        .HasColumnType("int");

                    b.Property<int>("Repetition")
                        .HasColumnType("int");

                    b.Property<int>("Set")
                        .HasColumnType("int");

                    b.HasKey("WorkoutId", "ExerciseId");

                    b.HasIndex("ExerciseId");

                    b.ToTable("WorkoutExercises");

                    b.HasData(
                        new
                        {
                            WorkoutId = 1,
                            ExerciseId = 1,
                            Repetition = 2,
                            Set = 1
                        },
                        new
                        {
                            WorkoutId = 1,
                            ExerciseId = 2,
                            Repetition = 3,
                            Set = 2
                        },
                        new
                        {
                            WorkoutId = 2,
                            ExerciseId = 3,
                            Repetition = 2,
                            Set = 1
                        });
                });

            modelBuilder.Entity("Life.Shared.Entities.WorkoutLog", b =>
                {
                    b.Property<int>("WorkoutLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkoutLogId"));

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PerformedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("WorkoutId")
                        .HasColumnType("int");

                    b.HasKey("WorkoutLogId");

                    b.HasIndex("MemberId");

                    b.HasIndex("WorkoutId");

                    b.ToTable("WorkoutLogs");
                });

            modelBuilder.Entity("Life.Shared.Entities.FoodNutrient", b =>
                {
                    b.HasOne("Life.Shared.Entities.Food", "Food")
                        .WithMany("NutrientDetails")
                        .HasForeignKey("FoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Life.Shared.Entities.Nutrient", "Nutrient")
                        .WithMany()
                        .HasForeignKey("NutrientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Food");

                    b.Navigation("Nutrient");
                });

            modelBuilder.Entity("Life.Shared.Entities.Meal", b =>
                {
                    b.HasOne("Life.Shared.Entities.Food", "Food")
                        .WithMany()
                        .HasForeignKey("FoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Food");
                });

            modelBuilder.Entity("Life.Shared.Entities.MealLog", b =>
                {
                    b.HasOne("Life.Shared.Entities.Meal", "Meal")
                        .WithMany()
                        .HasForeignKey("MealId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Life.Shared.Entities.Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Meal");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("Life.Shared.Entities.Member", b =>
                {
                    b.HasOne("Life.Shared.Entities.Meal", "Meal")
                        .WithMany()
                        .HasForeignKey("MealId");

                    b.HasOne("Life.Shared.Entities.Personal", "Personal")
                        .WithMany("Members")
                        .HasForeignKey("PersonalId");

                    b.HasOne("Life.Shared.Entities.Team", "Team")
                        .WithMany("Members")
                        .HasForeignKey("TeamId");

                    b.HasOne("Life.Shared.Entities.Workout", "Workout")
                        .WithMany()
                        .HasForeignKey("WorkoutId");

                    b.Navigation("Meal");

                    b.Navigation("Personal");

                    b.Navigation("Team");

                    b.Navigation("Workout");
                });

            modelBuilder.Entity("Life.Shared.Entities.ProgressMeasurement", b =>
                {
                    b.HasOne("Life.Shared.Entities.Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");
                });

            modelBuilder.Entity("Life.Shared.Entities.Team", b =>
                {
                    b.HasOne("Life.Shared.Entities.Location", "Location")
                        .WithMany("Teams")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("Life.Shared.Entities.WorkoutExercise", b =>
                {
                    b.HasOne("Life.Shared.Entities.Exercise", "Exercise")
                        .WithMany()
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Life.Shared.Entities.Workout", "Workout")
                        .WithMany("WorkoutExercises")
                        .HasForeignKey("WorkoutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");

                    b.Navigation("Workout");
                });

            modelBuilder.Entity("Life.Shared.Entities.WorkoutLog", b =>
                {
                    b.HasOne("Life.Shared.Entities.Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Life.Shared.Entities.Workout", "Workout")
                        .WithMany()
                        .HasForeignKey("WorkoutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");

                    b.Navigation("Workout");
                });

            modelBuilder.Entity("Life.Shared.Entities.Food", b =>
                {
                    b.Navigation("NutrientDetails");
                });

            modelBuilder.Entity("Life.Shared.Entities.Location", b =>
                {
                    b.Navigation("Teams");
                });

            modelBuilder.Entity("Life.Shared.Entities.Personal", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("Life.Shared.Entities.Team", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("Life.Shared.Entities.Workout", b =>
                {
                    b.Navigation("WorkoutExercises");
                });
#pragma warning restore 612, 618
        }
    }
}
